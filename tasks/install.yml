---
#Â Run this as "user" galaxy
- name: Activate virtual env, install and repair npm
  shell: 
    chdir: '{{ galaxy_install_dir }}'
    cmd: . venv/bin/activate; cd '{{ galaxy_server_dir }}/lib/galaxy/web/proxy/js'; npm install; npm audit fix

- name: Copy ini.sample to ini
  copy:
    src: '{{ galaxy_server_dir }}/config/plugins/interactive_environments/{{ item }}/config/{{ item }}.ini.sample'
    dest: '{{ galaxy_server_dir }}/config/plugins/interactive_environments/{{ item }}/config/{{ item }}.ini'
    remote_src: true
  with_items:
    - jupyter
    - rstudio

- name: Copy allowed_images.yml.sample to allowed_images.yml
  copy:
    src: '{{ galaxy_server_dir }}/config/plugins/interactive_environments/{{ item }}/config/allowed_images.yml.sample'
    dest: '{{ galaxy_server_dir }}/config/plugins/interactive_environments/{{ item }}/config/allowed_images.yml'
    remote_src: true
  with_items:
    - jupyter
    - rstudio

- name: Interactive environment configuration
  ini_file:
    path: '{{ galaxy_server_dir }}/config/plugins/interactive_environments/{{ item.name }}/config/{{ item.name }}.ini'
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value}}'
  with_items:
    - { name: jupyter , section: "docker", option: "use_volumes", value: "False" }
    - { name: rstudio , section: "docker", option: "use_volumes", value: "False" }
    - { name: jupyter , section: "docker", option: "wx_tempdir", value: "True"  }
    - { name: rstudio , section: "docker", option: "wx_tempdir", value: "True"  }

# Current Jupyter image is not working by default.
# An issue has been opened.
# https://github.com/bgruening/docker-jupyter-notebook/issues/50
- name: New allowed image file jupyter
  copy:
    src: jupyter_allowed_images.yml
    dest: '{{ galaxy_server_dir }}/config/plugins/interactive_environments/jupyter/config/allowed_images.yml'

#- name: Ensure docker.py is installed
#  pip:
#    name: docker-py
#    state: present
#  become_user: root
#  become_method: sudo

# Workaround for CentOS7+Python2+docker python package
# Python 2 is unable to import docker nor docker-py module
# resulting in "ImportError: No module named selectors" error.
# Python 3 + docker is fine.
# We avoid to use "ansible_python_iterpreter" variable set to "python3"
# to correctly run other roles.
- name: '[EL] Pull selected docker images'
  command: 'docker pull {{ item }}'
  loop:
    - quay.io/laniakeacloud/docker-jupyter-notebook:v1.0.0-beta1
    - quay.io/erasche/docker-rstudio-notebook:19.05
  when: ansible_os_family == "RedHat"

- name: '[Ubuntu] Pull selected docker images'
  docker_image:
    name: '{{ item }}'
    source: pull
  loop:
    - quay.io/laniakeacloud/docker-jupyter-notebook:v1.0.0-beta1
    - quay.io/erasche/docker-rstudio-notebook:19.05
  when: ansible_os_family == "Debian"
